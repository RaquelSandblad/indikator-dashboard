import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import sys
import os
import requests
import json

# L√§gg till current directory till Python path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from config import ORTER

st.set_page_config(
    page_title="Karttj√§nst - Kungsbacka",
    page_icon="üó∫Ô∏è",
    layout="wide"
)

# CSS
st.markdown("""
<style>
    .map-header {
        background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        color: white;
        padding: 2rem;
        border-radius: 12px;
        margin-bottom: 2rem;
    }
    .map-header h1 {
        color: white;
        margin: 0;
    }
    .area-card {
        background: white;
        padding: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        margin-bottom: 1rem;
        border-left: 4px solid #11998e;
    }
    .area-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #11998e;
        margin-bottom: 0.5rem;
    }
    .info-badge {
        display: inline-block;
        background: #e8f5e9;
        color: #1b5e20;
        padding: 0.3rem 0.8rem;
        border-radius: 12px;
        font-size: 0.85rem;
        margin: 0.2rem;
        font-weight: 500;
    }
    .planning-info {
        background: #fff3e0;
        border-left: 4px solid #f57c00;
        padding: 1rem;
        border-radius: 6px;
        margin: 1rem 0;
        color: #333;
    }
    /* Fix light text on light background */
    .js-plotly-plot .plotly text {
        fill: #000 !important;
    }
</style>
""", unsafe_allow_html=True)

# Header
st.markdown("""
<div class="map-header">
    <h1>üó∫Ô∏è Karttj√§nst - Planering och Utveckling</h1>
    <p>Utforska Kungsbackas olika orter och omr√•den med relevant information fr√•n √∂versiktsplanen och statistik</p>
</div>
""", unsafe_allow_html=True)

# Information om orter med planeringsdata
ORTER_INFO = {
    "Kungsbacka stad": {
        "typ": "Huvudort (prioriterad)",
        "befolkning_ca": 45000,
        "planering": "Stark urban utveckling med f√∂rt√§tning i centrum. Nytt stationsomr√•de planeras.",
        "utmaningar": "Trafik, parkeringsplatser, balansera tillv√§xt med gr√∂nomr√•den",
        "utvecklingsomr√•den": ["Stationsomr√•det", "V√§stra Kungsbacka", "√ñstra Kungsbacka"],
        "koordinater": [57.487, 12.075],
        "prioriterad": True
    },
    "√Ösa": {
        "typ": "Prioriterad ort",
        "befolkning_ca": 3500,
        "planering": "Utveckling av bost√§der och service f√∂r att st√§rka ortens roll som prioriterad ort.",
        "utmaningar": "Infrastruktur, kollektivtrafik, st√§rka ortens centrum",
        "utvecklingsomr√•den": ["√Ösa centrum", "√ñstra √Ösa"],
        "koordinater": [57.407, 12.145],
        "prioriterad": True
    },
    "Fj√§r√•s": {
        "typ": "Ort",
        "befolkning_ca": 3500,
        "planering": "Varsam utveckling med h√§nsyn till natur och kulturmilj√∂.",
        "utmaningar": "Bevara karakt√§r samtidigt som service st√§rks",
        "utvecklingsomr√•den": ["Fj√§r√•s centrum"],
        "koordinater": [57.417, 12.083],
        "prioriterad": False
    },
    "Onsala": {
        "typ": "Ort",
        "befolkning_ca": 14000,
        "planering": "Utveckling av h√•llbar kustbebyggelse. Fokus p√• kollektivtrafik.",
        "utmaningar": "H√∂gt exploateringstryck, v√§rna kustmilj√∂ och gr√∂nomr√•den",
        "utvecklingsomr√•den": ["Onsala centrum", "Gottsk√§r"],
        "koordinater": [57.402, 11.973],
        "prioriterad": False
    },
    "Kullavik": {
        "typ": "Ort",
        "befolkning_ca": 4500,
        "planering": "Komplettering av bost√§der med h√§nsyn till kustl√§ge och natur.",
        "utmaningar": "Begr√§nsat utrymme, bevara karakt√§r",
        "utvecklingsomr√•den": ["Kullavik centrum"],
        "koordinater": [57.420, 11.934],
        "prioriterad": False
    },
    "S√§r√∂": {
        "typ": "Ort",
        "befolkning_ca": 3000,
        "planering": "Exklusiv kustort med fokus p√• att bevara milj√∂ och karakt√§r.",
        "utmaningar": "H√∂gt exploateringstryck, begr√§nsad mark, bevara kustmilj√∂",
        "utvecklingsomr√•den": ["S√§r√∂ centrum"],
        "koordinater": [57.446, 11.941],
        "prioriterad": False
    },
    "Vallda": {
        "typ": "Ort",
        "befolkning_ca": 1500,
        "planering": "Kompletterande bebyggelse i anslutning till befintlig ort.",
        "utmaningar": "Gles bebyggelse, serviceutbud",
        "utvecklingsomr√•den": ["Vallda centrum"],
        "koordinater": [57.460, 12.130],
        "prioriterad": False
    },
    "Frilles√•s": {
        "typ": "Ort",
        "befolkning_ca": 1200,
        "planering": "Bevara sm√•ortskarakt√§r, komplettering med mindre bostadsomr√•den.",
        "utmaningar": "Kollektivtrafik, service",
        "utvecklingsomr√•den": ["Frilles√•s centrum"],
        "koordinater": [57.379, 12.111],
        "prioriterad": False
    },
    "Anneberg": {
        "typ": "Prioriterad ort",
        "befolkning_ca": 800,
        "planering": "Prioriterad ort med varsam komplettering av bost√§der och service.",
        "utmaningar": "Utveckla service, f√∂rb√§ttra kollektivtrafik",
        "utvecklingsomr√•den": ["Anneberg centrum", "√Ñlafors", "Lerberg"],
        "koordinater": [57.320, 12.180],
        "prioriterad": True
    }
}

# Skapa karta med orter
st.subheader("üìç Kungsbacka kommun - Orter och utvecklingsomr√•den")

# F√∂rklaring av ortstruktur
with st.expander("‚ÑπÔ∏è Om Kungsbackas ortstruktur"):
    st.markdown("""
    **Kungsbacka kommun best√•r av:**
    
    - **1 Huvudort (prioriterad):** Kungsbacka stad (ca 45,000 inv√•nare)
    - **2 Prioriterade orter:** √Ösa och Anneberg
    - **6 √ñvriga orter:** Kullavik, S√§r√∂, Vallda, Onsala, Frilles√•s och Fj√§r√•s
    
    **F√§rgkodning p√• kartan:**
    - üü§ **M√∂rk orange** = Prioriterade orter (Kungsbacka stad, √Ösa, Anneberg)
    - üü† **Orange** = √ñvriga orter
    
    **Vad betyder "prioriterad ort"?**
    
    Kungsbacka stad, √Ösa och Anneberg √§r utpekade som prioriterade orter i √∂versiktsplanen. Det inneb√§r att dessa orter 
    har s√§rskild betydelse f√∂r kommunens utveckling och f√•r prioritet n√§r det g√§ller:
    - Utbyggnad av service och kommersiell verksamhet
    - Kollektivtrafikf√∂rbindelser
    - Utveckling av bost√§der och offentlig service
    
    M√•let √§r att st√§rka dessa orter s√• att de kan erbjuda god service till b√•de boende i orten 
    och omkringliggande landsbygdsomr√•den.
    """)


# F√∂rbered data f√∂r kartan
map_data = []
for ort, info in ORTER_INFO.items():
    map_data.append({
        'Ort': ort,
        'Typ': info['typ'],
        'Befolkning': info['befolkning_ca'],
        'Lat': info['koordinater'][0],
        'Lon': info['koordinater'][1],
        'Info': f"{ort} ({info['typ']})<br>Ca {info['befolkning_ca']:,} inv√•nare"
    })

df_map = pd.DataFrame(map_data)

# L√§s in ortgr√§nserna fr√•n GeoJSON
try:
    with open('/workspaces/indikator-dashboard/data/orter_avgransningar.geojson', 'r') as f:
        orter_geojson = json.load(f)
except FileNotFoundError:
    orter_geojson = None

# Skapa interaktiv karta med ortgr√§nser
fig = go.Figure()

# L√§gg till ortgr√§nser som polygoner
if orter_geojson:
    for feature in orter_geojson['features']:
        ort_namn = feature['properties']['ort']
        ort_info = ORTER_INFO.get(ort_namn, {})
        is_prioriterad = ort_info.get('prioriterad', False)
        
        # F√§rg baserat p√• prioritering
        color = '#d84315' if is_prioriterad else '#ff9800'
        
        # L√§gg till polygon
        coords = feature['geometry']['coordinates'][0]
        lats = [c[1] for c in coords]
        lons = [c[0] for c in coords]
        
        fig.add_trace(go.Scattermapbox(
            lat=lats,
            lon=lons,
            mode='lines',
            line=dict(width=2, color=color),
            fill='toself',
            fillcolor=color,
            opacity=0.15,
            name=ort_namn,
            hoverinfo='text',
            hovertext=f"{ort_namn}<br>{ort_info.get('typ', 'Ort')}<br>Ca {ort_info.get('befolkning_ca', 0):,} inv√•nare",
            showlegend=False
        ))

# L√§gg till punkter f√∂r orterna (ovanp√• polygonerna)
fig.add_trace(go.Scattermapbox(
    lat=df_map['Lat'],
    lon=df_map['Lon'],
    mode='markers+text',
    marker=dict(
        size=df_map['Befolkning'] / 500,
        color=['#d84315' if 'prioriterad' in typ.lower() else '#ff9800' for typ in df_map['Typ']],
        opacity=0.9
    ),
    text=df_map['Ort'],
    textposition='top center',
    textfont=dict(size=10, color='#000', family='Arial, sans-serif'),
    hoverinfo='text',
    hovertext=[f"{row['Ort']}<br>{row['Typ']}<br>Ca {row['Befolkning']:,} inv√•nare" 
               for _, row in df_map.iterrows()],
    showlegend=False
))

fig.update_layout(
    mapbox=dict(
        style="open-street-map",
        center=dict(lat=57.45, lon=12.05),
        zoom=10
    ),
    height=600,
    margin={"r": 0, "t": 0, "l": 0, "b": 0},
    showlegend=False
)

st.plotly_chart(fig, use_container_width=True)

# Urval av ort
st.markdown("---")
st.subheader("üèòÔ∏è V√§lj ort f√∂r detaljerad information")

selected_ort = st.selectbox(
    "V√§lj ort:",
    list(ORTER_INFO.keys()),
    index=0
)

if selected_ort:
    info = ORTER_INFO[selected_ort]
    
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.markdown(f"""
        <div class="area-card">
            <div class="area-title">{selected_ort}</div>
            <span class="info-badge">{info['typ']}</span>
            <span class="info-badge">Ca {info['befolkning_ca']:,} inv√•nare</span>
            {f'<span class="info-badge" style="background: #fff3e0; color: #f57c00; font-weight: 600;">‚≠ê Prioriterad ort</span>' if info['prioriterad'] else ''}
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown(f"""
        <div class="planning-info">
            <h4>üìã Planering och utveckling</h4>
            <p>{info['planering']}</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("**‚ö†Ô∏è Utmaningar:**")
        st.write(info['utmaningar'])
        
        st.markdown("**üèóÔ∏è Utvecklingsomr√•den:**")
        for omr√•de in info['utvecklingsomr√•den']:
            st.write(f"- {omr√•de}")
    
    with col2:
        st.markdown("### üîó Relaterade dokument")
        
        st.markdown("""
        <div style="background: #f5f5f5; padding: 1rem; border-radius: 8px;">
            <h4 style="margin-top: 0;">√ñversiktsplanen</h4>
            <p style="font-size: 0.9rem;">Se detaljerad information om utveckling och planering f√∂r detta omr√•de.</p>
        """, unsafe_allow_html=True)
        
        if st.button(f"üìñ L√§s mer om {selected_ort} i √∂versiktsplanen", key="op_link"):
            st.info(f"√ñppnar √∂versiktsplanen f√∂r {selected_ort}...")
            st.markdown("[G√• till √∂versiktsplanen](https://karta.kungsbacka.se/oversiktsplan)", unsafe_allow_html=True)
        
        st.markdown("</div>", unsafe_allow_html=True)
        
        # Visa eventell statistik f√∂r omr√•det om tillg√§nglig
        st.markdown("### üìä Statistik")
        st.info("Statistik p√• ortniv√• kommer fr√•n SCB och √∂versiktsplanen")

# L√§nk till √∂versiktsplanekartan
st.markdown("---")
st.subheader("üó∫Ô∏è Fullst√§ndig √∂versiktsplanekarta")

col1, col2 = st.columns(2)

with col1:
    st.markdown("""
    ### Interaktiv √∂versiktsplanekarta
    
    F√∂r mer detaljerad kartinformation och planeringsdokument, bes√∂k kommunens officiella √∂versiktsplanekarta.
    
    H√§r kan du:
    - Se detaljerade planer f√∂r olika omr√•den
    - L√§sa om markanv√§ndning och restriktioner
    - Hitta information om framtida utvecklingsomr√•den
    - Ta del av underlagskartor
    """)
    
    st.markdown("""
    <a href="https://karta.kungsbacka.se/oversiktsplan" target="_blank" 
       style="display: inline-block; background: #11998e; color: white; padding: 0.8rem 1.5rem; 
              border-radius: 6px; text-decoration: none; font-weight: 500;">
        üó∫Ô∏è √ñppna √∂versiktsplanekartan
    </a>
    """, unsafe_allow_html=True)

with col2:
    st.markdown("""
    ### Tillg√§ngliga kartlager
    
    I √∂versiktsplanekartan hittar du bland annat:
    
    - **Markanv√§ndning** - Hur mark planeras anv√§ndas
    - **Utvecklingsomr√•den** - Framtida utbyggnadsomr√•den
    - **Gr√∂nstruktur** - Parker, naturomr√•den
    - **Infrastruktur** - V√§gar, kollektivtrafik
    - **Riksintressen** - Skyddade omr√•den
    - **Kulturmilj√∂** - Bevarandev√§rda milj√∂er
    """)

# Extra funktioner
st.markdown("---")
st.subheader("üìà J√§mf√∂r orter")

col1, col2 = st.columns(2)

with col1:
    ort1 = st.selectbox("V√§lj f√∂rsta ort:", list(ORTER_INFO.keys()), key="ort1")

with col2:
    ort2 = st.selectbox("V√§lj andra ort:", list(ORTER_INFO.keys()), index=1, key="ort2")

if ort1 and ort2:
    st.markdown("### J√§mf√∂relse")
    
    comp_col1, comp_col2, comp_col3 = st.columns(3)
    
    with comp_col1:
        st.metric("Befolkning", 
                 f"{ORTER_INFO[ort1]['befolkning_ca']:,}",
                 delta=f"{ORTER_INFO[ort1]['befolkning_ca'] - ORTER_INFO[ort2]['befolkning_ca']:,} vs {ort2}")
    
    with comp_col2:
        st.metric(ort1, ORTER_INFO[ort1]['typ'])
    
    with comp_col3:
        st.metric(ort2, ORTER_INFO[ort2]['typ'])
    
    # J√§mf√∂relse i tabell
    comp_df = pd.DataFrame({
        'Aspekt': ['Typ', 'Befolkning (ca)', 'Antal utvecklingsomr√•den'],
        ort1: [
            ORTER_INFO[ort1]['typ'],
            f"{ORTER_INFO[ort1]['befolkning_ca']:,}",
            len(ORTER_INFO[ort1]['utvecklingsomr√•den'])
        ],
        ort2: [
            ORTER_INFO[ort2]['typ'],
            f"{ORTER_INFO[ort2]['befolkning_ca']:,}",
            len(ORTER_INFO[ort2]['utvecklingsomr√•den'])
        ]
    })
    
    st.dataframe(comp_df, use_container_width=True, hide_index=True)
