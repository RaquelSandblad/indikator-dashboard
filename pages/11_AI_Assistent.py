import streamlit as st

# OBS! Denna sida √§r tillf√§lligt dold fr√•n sidomenyn.
st.set_page_config(page_title="AI-Assistent (Ej publik)", page_icon="‚ùå", layout="wide", initial_sidebar_state="collapsed")

# Avbryt rendering om n√•gon f√∂rs√∂ker √∂ppna sidan direkt
st.warning("Denna sida √§r inte publik √§nnu.")
st.stop()
import sys
import os
from datetime import datetime
import requests
from bs4 import BeautifulSoup
import re
import json

# L√§gg till current directory till Python path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Importera data-konnektorer
try:
    from data.kolada_connector import kolada
    from data_sources import scb_data
except:
    pass

# L√§s in √∂versiktsplanens kunskap
@st.cache_data
def load_oversiktsplan_knowledge():
    """L√§ser in kunskapsbasen om √∂versiktsplanen"""
    try:
        knowledge_path = os.path.join(os.path.dirname(__file__), '..', 'data', 'oversiktsplan_kunskap.json')
        with open(knowledge_path, 'r', encoding='utf-8') as f:
            return json.load(f)
    except Exception as e:
        st.error(f"Kunde inte l√§sa √∂versiktsplanens kunskapsbas: {e}")
        return None

st.set_page_config(
    page_title="AI-Assistent - Kungsbacka",
    page_icon="ü§ñ",
    layout="wide"
)

# CSS
st.markdown("""
<style>
    .chat-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2rem;
        border-radius: 12px;
        margin-bottom: 2rem;
    }
    .chat-header h1 {
        color: white;
        margin: 0;
    }
    .chat-message {
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 1rem;
    }
    .user-message {
        background: #e3f2fd;
        border-left: 4px solid #1976d2;
    }
    .assistant-message {
        background: #f3e5f5;
        border-left: 4px solid #7b1fa2;
    }
    .data-source-badge {
        display: inline-block;
        background: #4caf50;
        color: white;
        padding: 0.3rem 0.8rem;
        border-radius: 12px;
        font-size: 0.8rem;
        margin: 0.2rem;
    }
</style>
""", unsafe_allow_html=True)

# Header
st.markdown("""
<div class="chat-header">
    <h1>ü§ñ AI-Assistent f√∂r Kungsbacka</h1>
    <p>St√§ll fr√•gor om tillv√§xt, demografi, utmaningar och utveckling i Kungsbacka kommun</p>
</div>
""", unsafe_allow_html=True)

# Information om vad assistenten kan
with st.expander("‚ÑπÔ∏è Vad kan AI-assistenten hj√§lpa till med?"):
    st.markdown("""
    **AI-assistenten har tillg√•ng till:**
    
    ÔøΩ **Kommunens dokument (l√§ser och analyserar):**
    - √ñversiktsplanen (l√§ser direkt fr√•n karta.kungsbacka.se)
    - H√•llbarhetsstrategi (V√•ra steg mot h√•llbarhet)
    - Vision och styrdokument
    
    ÔøΩüìä **Kolada-statistik:**
    - Arbetsmarknadsdata (syssels√§ttning, arbetsl√∂shet)
    - Utbildningsresultat (grundskola, gymnasium)
    - Omsorg och v√§lf√§rd (barnomsorg, √§ldreomsorg)
    - Milj√∂ och h√•llbarhet (utsl√§pp, √•tervinning)
    - Kultur och fritid (bibliotek, fritidsverksamhet)
    
    üë• **SCB-data:**
    - Befolkningsstatistik och prognoser
    - Bostadsbyggande och bostadsbest√•nd
    - Befolkningsf√∂r√§ndringar
    
    **Exempel p√• fr√•gor:**
    - "Vad s√§ger √∂versiktsplanen om utveckling i Kungsbacka?"
    - "Hur utvecklas befolkningen i Kungsbacka?"
    - "Vilka √§r de st√∂rsta utmaningarna f√∂r kommunen?"
    - "Hur ser skolresultaten ut j√§mf√∂rt med andra kommuner?"
    - "Vad s√§ger h√•llbarhetsstrategin om klimatarbetet?"
    - "Hur arbetar kommunen med markanv√§ndning och planering?"
    
    **üÜï Nyhet:** Assistenten l√§ser nu automatiskt relevant information fr√•n kommunens webbsidor!
    """)

# Initialisera chat-historik
if "messages" not in st.session_state:
    st.session_state.messages = []

# Cache f√∂r webbsideinneh√•ll
if "web_content_cache" not in st.session_state:
    st.session_state.web_content_cache = {}

# Funktion f√∂r att h√§mta inneh√•ll fr√•n webbsida
@st.cache_data(ttl=3600*24)  # Cache i 24 timmar
def fetch_web_content(url):
    """H√§mtar och extraherar text fr√•n en webbsida"""
    try:
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        }
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()
        
        soup = BeautifulSoup(response.content, 'lxml')
        
        # Ta bort script och style element
        for script in soup(["script", "style", "nav", "footer", "header"]):
            script.decompose()
        
        # H√§mta text
        text = soup.get_text()
        
        # Rensa text
        lines = (line.strip() for line in text.splitlines())
        chunks = (phrase.strip() for line in lines for phrase in line.split("  "))
        text = ' '.join(chunk for chunk in chunks if chunk)
        
        return text[:10000]  # Begr√§nsa till 10000 tecken
    except Exception as e:
        return f"Kunde inte h√§mta inneh√•ll fr√•n {url}: {str(e)}"

# Funktion f√∂r att s√∂ka i webbsideinneh√•ll
def search_in_web_content(query, content):
    """S√∂ker efter relevant information i webbsideinneh√•ll"""
    query_words = query.lower().split()
    
    # L√§gg till synonymer f√∂r vanliga planeringstermer
    expanded_words = query_words.copy()
    for word in query_words:
        if word in ['utveckla', 'utveckling', 'bygga', 'byggande']:
            expanded_words.extend(['bebyggelse', 'planering', 'prioriterad', 'strategi'])
        elif word in ['plats', 'platser', 'omr√•de', 'omr√•den']:
            expanded_words.extend(['ort', 'orter', 'stad', 't√§tort'])
        elif word in ['l√§mplig', 'l√§mpliga', 'b√§st', 'b√§sta']:
            expanded_words.extend(['prioriterad', 'prioriterade', 'fokus'])
    
    sentences = re.split(r'[.!?]+', content)
    
    relevant_sentences = []
    for sentence in sentences:
        sentence_lower = sentence.lower()
        # Om minst 2 av s√∂korden (eller synonymer) finns i meningen
        matches = sum(1 for word in expanded_words if word in sentence_lower)
        if matches >= min(2, len(expanded_words) // 2):  # Minst h√§lften av orden
            # Filtrera bort f√∂r korta meningar
            if len(sentence.strip()) > 30:
                relevant_sentences.append(sentence.strip())
    
    return relevant_sentences[:8]  # Returnera max 8 relevanta meningar

# Visa chat-historik
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# Funktion f√∂r att h√§mta relevant data baserat p√• fr√•gan
def get_relevant_data(question):
    """H√§mtar relevant data baserat p√• anv√§ndarens fr√•ga"""
    question_lower = question.lower()
    data_context = []
    web_insights = []
    
    # Ladda √∂versiktsplanens kunskapsbas
    op_knowledge = load_oversiktsplan_knowledge()
    
    # S√ñK I √ñVERSIKTSPLANENS KUNSKAPSBAS
    with st.spinner("S√∂ker i √∂versiktsplanen..."):
        if op_knowledge and any(word in question_lower for word in ['utveckla', 'l√§mplig', 'plats', 'omr√•de', 'prioriterad', 'bygga', 'planering', '√∂versiktsplan', 'ort', 'bost√§der']):
            op_insights = []
            
            # Hitta information om prioriterade orter
            if any(word in question_lower for word in ['ort', 'plats', 'utveckla', 'prioriterad']):
                for ort_namn, ort_info in op_knowledge.get('prioriterade_orter', {}).items():
                    op_insights.append(f"**{ort_namn}** ({ort_info['typ']}, {ort_info['prioritet']} prioritet): {ort_info['beskrivning']}")
                
                # L√§gg till √∂vriga orter om fr√•gan √§r bred
                if 'alla' in question_lower or 'vilka' in question_lower:
                    for ort_namn, ort_info in op_knowledge.get('ovriga_orter', {}).items():
                        op_insights.append(f"**{ort_namn}** ({ort_info['typ']}): {ort_info['beskrivning']}")
            
            # Hitta utvecklingsomr√•den
            if any(word in question_lower for word in ['utvecklingsomr√•de', 'omr√•de', 'bygga', 'bost√§der']):
                for omrade_namn, omrade_info in op_knowledge.get('strategiska_utvecklingsomr√•den', {}).items():
                    op_insights.append(f"**{omrade_namn}** ({omrade_info['ort']}): {omrade_info['beskrivning']} - {omrade_info['typ']}")
            
            # Hitta principer och strategier
            if any(word in question_lower for word in ['princip', 'strategi', 'planering', 'hur']):
                strategier = op_knowledge.get('planeringsstrategier', {})
                op_insights.append(f"**Planprincip**: {strategier.get('planprincip', '')}")
                op_insights.append(f"**Prioritering**: {strategier.get('prioritering', '')}")
            
            if op_insights:
                web_insights.append(("√ñversiktsplanen", op_insights))
        
        # S√∂k i h√•llbarhetsstrategi (beh√•ll web scraping f√∂r denna)
        if any(word in question_lower for word in ['h√•llbarhet', 'milj√∂', 'klimat']):
            hall_content = fetch_web_content("https://kungsbacka.se/kommun-och-politik/utveckling-och-innovation/hallbarhet/vara-steg-mot-hallbarhet")
            if not hall_content.startswith("Kunde inte"):
                relevant = search_in_web_content(question, hall_content)
                if relevant:
                    web_insights.append(("H√•llbarhetsstrategi", relevant))
    
    try:
        with st.spinner("H√§mtar statistik fr√•n SCB och Kolada..."):
            
            # === ALLTID h√§mta grundl√§ggande befolkningsdata ===
            try:
                bef_data = scb_data.get_population_data()
                if bef_data is not None and not bef_data.empty:
                    latest = bef_data.iloc[-1]
                    previous = bef_data.iloc[-2] if len(bef_data) > 1 else None
                    
                    tillvaxt = ""
                    if previous is not None:
                        change = latest['Befolkning'] - previous['Befolkning']
                        tillvaxt = f" (+{int(change):,} fr√•n {previous['√Ör']})"
                    
                    data_context.append(f"üìä **Befolkning (SCB):** {int(latest['Befolkning']):,} inv√•nare ({latest['√Ör']}){tillvaxt}")
                
                # F√∂rs√∂k h√§mta befolkningsf√∂r√§ndringar
                try:
                    from data.scb_connector import SCBConnector
                    scb_conn = SCBConnector()
                    pop_change = scb_conn.get_population_change()
                    if pop_change is not None and not pop_change.empty:
                        latest_year = pop_change['√Ör'].max()
                        latest_data = pop_change[pop_change['√Ör'] == latest_year]
                        
                        for typ in ['Folk√∂kning', 'F√∂dda', 'D√∂da', 'Inflyttade', 'Utflyttade']:
                            row = latest_data[latest_data['Typ'] == typ]
                            if not row.empty:
                                antal = int(row['Antal'].iloc[0])
                                emoji = {'Folk√∂kning': 'üìà', 'F√∂dda': 'üë∂', 'D√∂da': '‚ö∞Ô∏è', 
                                        'Inflyttade': 'üì•', 'Utflyttade': 'üì§'}.get(typ, '‚Ä¢')
                                data_context.append(f"{emoji} **{typ} (SCB):** {antal:+,} personer ({latest_year})")
                except:
                    pass  # Forts√§tt √§ven om befolkningsf√∂r√§ndringar inte fungerar
            except:
                pass
            
            # === SMART KOLADA-S√ñKNING - hittar relevanta KPI:er automatiskt ===
            try:
                relevant_kpis = kolada.get_relevant_kpis_for_question(question)
                if relevant_kpis:
                    for kpi_data in relevant_kpis:
                        # Hitta passande emoji baserat p√• KPI-titeln
                        title = kpi_data.get('titel', '')
                        emoji = 'üìä'  # Standard
                        
                        if any(word in title.lower() for word in ['skol', 'elev', 'betyg', 'utbildning']):
                            emoji = 'üéì'
                        elif any(word in title.lower() for word in ['arbete', 'syssels√§tt', 'arbetsl√∂s']):
                            emoji = 'üíº'
                        elif any(word in title.lower() for word in ['barn', 'f√∂rskola']):
                            emoji = 'üë∂'
                        elif any(word in title.lower() for word in ['√§ldre', '√§ldreomsorg', '65+', '80+']):
                            emoji = 'üë¥'
                        elif any(word in title.lower() for word in ['milj√∂', 'klimat', 'utsl√§pp', '√•tervinning']):
                            emoji = 'üåç'
                        elif any(word in title.lower() for word in ['kultur', 'fritid', 'bibliotek']):
                            emoji = 'üé≠'
                        elif any(word in title.lower() for word in ['trygghet', 'brott']):
                            emoji = 'üõ°Ô∏è'
                        elif any(word in title.lower() for word in ['bostad', 'l√§genhet', 'byggande']):
                            emoji = 'üè†'
                        elif any(word in title.lower() for word in ['trafik', 'kollektiv', 'cykel']):
                            emoji = 'üöå'
                        
                        data_context.append(
                            f"{emoji} **{title} (Kolada {kpi_data['kpi_id']}):** "
                            f"{kpi_data['v√§rde']:.1f}{kpi_data.get('enhet', '')} ({kpi_data['√•r']})"
                        )
            except Exception as e:
                st.warning(f"Smart s√∂kning i Kolada misslyckades: {e}")
            
            # === Extra SCB-data f√∂r specifika fr√•gor ===
            if any(word in question_lower for word in ['bostad', 'l√§genhet', 'hus', 'byggande', 'bostadsbyggande']):
                try:
                    bost_data = scb_data.get_housing_data()
                    if bost_data is not None and not bost_data.empty:
                        latest = bost_data.iloc[-1]
                        data_context.append(f"üè† **Bost√§der (SCB):** {int(latest['Antal']):,} l√§genheter totalt ({latest['√Ör']})")
                except:
                    pass
        
    except Exception as e:
        st.error(f"Fel vid datah√§mtning: {str(e)}")
    
    return data_context, web_insights

# Funktion f√∂r att generera svar
def generate_response(question, data_context, web_insights):
    """Genererar ett detaljerat svar baserat p√• fr√•gan och tillg√§nglig data"""
    
    # Samla k√§llor
    sources_used = []
    
    # Bygg upp ett rikt dataavsnitt
    context_str = ""
    if data_context:
        context_str = "\n\n## üìä Aktuell statistik f√∂r Kungsbacka\n\n"
        for d in data_context:
            context_str += f"{d}\n"
        sources_used.append("Kolada/SCB-statistik")
    
    # Bygg upp webbinsikter med mer struktur
    web_str = ""
    if web_insights:
        web_str = "\n\n## üìÑ Insikter fr√•n kommunens dokument\n\n"
        for source, insights in web_insights:
            if insights:
                web_str += f"### {source}:\n"
                sources_used.append(source)
                for insight in insights:
                    if len(insight) > 50:
                        web_str += f"‚Ä¢ {insight}\n"
                web_str += "\n"
    
    # K√§llf√∂rteckning
    if sources_used:
        sources_footer = f"\n\n---\n### üìö K√§llor\n" + "\n".join(f"‚úì {s}" for s in set(sources_used))
    else:
        sources_footer = ""
    
    # Analysera fr√•gan och ge ett DETALJERAT svar
    question_lower = question.lower()
    
    # OM VI HAR DATA ELLER DOKUMENTINSIKTER - anv√§nd dem DIREKT i svaret!
    if data_context or web_insights:
        # Speciell hantering f√∂r planeringsfr√•gor
        if any(word in question_lower for word in ['utveckla', 'l√§mplig', 'plats', 'omr√•de', 'var ska', 'bygga', 'planering', '√∂versiktsplan']):
            intro = """
## üèóÔ∏è L√§mpliga platser f√∂r utveckling i Kungsbacka

Enligt √∂versiktsplanen och kommunens strategiska dokument prioriteras f√∂ljande omr√•den:

### Prioriterade orter f√∂r utveckling:
1. **Kungsbacka stad** - Huvudort med fokus p√• f√∂rt√§tning och stadsbyggnadsutveckling
2. **√Ösa** - Prioriterad ort med potential f√∂r bost√§der och verksamheter
3. **Anneberg** - Prioriterad ort med utvecklingspotential

### √ñvriga orter (kompletterande bebyggelse):
- Fj√§r√•s, Onsala, Kullavik, S√§r√∂, Vallda, Frilles√•s

### Strategiska utvecklingsomr√•den:
- **T√∂l√∂ √§ngar** (Kungsbacka stad) - Bost√§der
- **Voxl√∂v** (Kungsbacka stad) - Bost√§der och verksamheter
- **Boviera** (√Ösa) - Bostadsomr√•de
- **√Öskatorp** (√Ösa) - Blandad bebyggelse
- **√Ñlafors/Lerberg** (Anneberg) - Bost√§der
- **Hede station** - Verksamheter och logistik
- **Kungsm√§ssan** - Handel och kontor
"""
            response = f"{intro}\n{context_str}\n{web_str}\n{sources_footer}\n\n### üó∫Ô∏è L√§s mer\nBes√∂k **√ñversiktsplanering** f√∂r detaljer om planbesked och **Ortanalys** f√∂r djupare analys av varje ort."
        else:
            response = f"""
## Svar p√• din fr√•ga: "{question}"

{context_str}
{web_str}
{sources_footer}

### üí° Hur kan jag hj√§lpa dig vidare?
St√§ll g√§rna f√∂ljdfr√•gor eller utforska relaterade sidor i dashboarden!
"""
        return response
    
    # ANNARS - ge v√§gledning
    response = f"""
## Svar p√• din fr√•ga: "{question}"

Jag hittade tyv√§rr ingen specifik data f√∂r denna fr√•ga i de k√§llor jag har tillg√•ng till.

### üí° F√∂rslag p√• hur du kan f√• mer information:

**üìä F√∂r statistik och nyckeltal:**
- **Nyckeltal** - √ñvergripande m√•luppfyllelse
- **Kolada** - Detaljerad statistik och j√§mf√∂relser  
- **Befolkning** - Demografisk analys och prognoser

**üó∫Ô∏è F√∂r planering och utveckling:**
- **√ñversiktsplanering** - Planbesked, prognoser och uppf√∂ljning
- **Karttj√§nst** - Geografisk √∂versikt av orter
- **Ortanalys** - Detaljerad information per ort

**ü§ñ Tips f√∂r b√§ttre svar:**
St√§ll g√§rna en mer specifik fr√•ga! Exempel:
- "Vilka √§r de prioriterade orterna f√∂r utveckling?"
- "Hur utvecklas befolkningen i Kungsbacka?"
- "Vilka √§r de st√∂rsta utmaningarna f√∂r kommunen?"
- "Vad s√§ger √∂versiktsplanen om bost√§der?"
"""
    return response
    
    # GAMLA MALLAR NEDAN (inte anv√§nds l√§ngre)
    
    # === UTMANINGAR ===
    if any(word in question_lower for word in ['utmaning', 'problem', 'sv√•righet', 'risk', 'hot']):
        response = f"""
## üéØ Utmaningar och utvecklingsomr√•den f√∂r Kungsbacka

Baserat p√• genomg√•ng av kommunens data och styrdokument kan jag identifiera f√∂ljande huvudutmaningar:

### 1. Demografiska utmaningar

**Befolkningstillv√§xt:**
- Kungsbacka v√§xer snabbt (+1-2% √•rligen), vilket kr√§ver:
  - Utbyggnad av f√∂rskolor, skolor och √§ldreboenden
  - Fler bost√§der (m√•ls√§ttning: 1000 nya l√§genheter/√•r)
  - Ut√∂kad samh√§llsservice och infrastruktur

**√Öldrande befolkning:**
- √ñkande andel 65+ st√§ller krav p√•:
  - Hemtj√§nst och v√•rd
  - Tillg√§nglig kollektivtrafik
  - Bostadsanpassning

### 2. Bostadsf√∂rs√∂rjning och planering

**Utmaningar:**
- Behov av variation i bostadsutbud (hyresr√§tter, √§gander√§tter, seniorbost√§der)
- Balansera f√∂rt√§tning med bevarande av gr√∂nomr√•den
- √ñP-f√∂ljsamhet: 74% av planbesked f√∂ljer √∂versiktsplanen (m√•l: >80%)

**L√∂sningar:**
- Prioritera Kungsbacka stad, √Ösa och Fj√§r√•s f√∂r bostadsbyggande
- Utveckla kollektivtrafikn√§ra l√§gen
- Samverka med byggherrar tidigt i processen

### 3. H√•llbarhet och klimat

**Milj√∂m√•l:**
- Minska v√§xthusgasutsl√§pp (nuvarande: ~87 ton CO‚ÇÇ-ekv/inv√•nare)
- √ñka andel h√•llbart resande (m√•l: 50% kollektivt/cykel/g√•ng)
- √ñka √•tervinningsgrad (nuvarande: 52%, m√•l: 60%)

**√Ötg√§rder:**
- Utbyggnad av cykelv√§gar och kollektivtrafik
- Energieffektivisering av kommunala byggnader
- Fr√§mja cirkul√§r ekonomi

### 4. Kompetensf√∂rs√∂rjning

**Utmaningar:**
- S√§kerst√§lla tillg√•ng till kvalificerad arbetskraft inom:
  - V√•rd och omsorg
  - Skola och f√∂rskola
  - Tekniska och administrativa yrken

**√Ötg√§rder:**
- Samarbete med n√§ringsliv och utbildningsanordnare
- Attraktiv arbetsgivare med goda villkor
- Integration och inkludering p√• arbetsmarknaden
{context_str}
{web_str}
{sources_footer}

### üí° Rekommendation
Utforska sidorna **"Kommunens nyckeltal"** och **"Kolada"** f√∂r detaljerad uppf√∂ljning av dessa omr√•den.
"""
    
    # === TILLV√ÑXT OCH UTVECKLING ===
    elif any(word in question_lower for word in ['tillv√§xt', 'utveckling', 'trend', 'framtid', 'prognos']):
        response = f"""
## üìà Tillv√§xt och utveckling i Kungsbacka

Kungsbacka √§r en av Sveriges snabbast v√§xande kommuner med stark positiv utveckling:

### Befolkningstillv√§xt

**Nul√§ge:**
- Befolkning 2024: Ca 85,800 inv√•nare
- √Örlig tillv√§xt: +1-2% (ca 800-1700 personer/√•r)
- Prognos 2030: √ñver 95,000 inv√•nare

**Drivkrafter:**
- Attraktivt l√§ge mellan G√∂teborg och Varberg
- God tillg√•ng till arbetstillf√§llen
- N√§rhet till natur, kust och sk√§rg√•rd
- Stark inflyttning fr√•n G√∂teborgsregionen

### Ekonomisk utveckling

**Arbetsmarknad:**
- H√∂g syssels√§ttningsgrad (~89% f√∂rv√§rvsarbetande 20-64 √•r)
- M√•nga pendlar till G√∂teborg (ca 30-40%)
- V√§xande lokalt n√§ringsliv, s√§rskilt inom:
  - Handel och service
  - Bygg och anl√§ggning
  - Kunskap och teknik

**Bostadsbyggande:**
- M√•ls√§ttning: 1000 nya l√§genheter/√•r
- Aktuell produktion: ~850 l√§genheter/√•r
- Fokus p√• Kungsbacka stad, √Ösa och Fj√§r√•s

### Samh√§llsutveckling

**Infrastruktur:**
- Utbyggnad av V√§stkustbanan (snabbare t√•g till G√∂teborg)
- Nya cykelv√§gar och g√•ng-/cykelbroar
- F√∂rb√§ttrad kollektivtrafik

**Utbildning:**
- Goda skolresultat (meritv√§rde √∂ver rikssnitt)
- Utbyggnad av f√∂rskolor och grundskolor
- Nytt gymnasieskolehus planerat

**H√•llbarhet:**
- Klimatneutral kommun 2040 (m√•l)
- √ñkat fokus p√• gr√∂n infrastruktur
- Cirkul√§r ekonomi och avfallsminimering
{context_str}
{web_str}
{sources_footer}

### üó∫Ô∏è N√§sta steg
Se **"√ñversiktsplanering"** f√∂r detaljer om planerade utvecklingsomr√•den och **"Befolkning"** f√∂r demografiska prognoser.
"""
    
    # === J√ÑMF√ñRELSER ===
    elif any(word in question_lower for word in ['j√§mf√∂r', 'skillnad', 'andra kommuner', 'liknande', 'konkurrera']):
        response = f"""
## ‚öñÔ∏è Kungsbacka j√§mf√∂rt med andra kommuner

### J√§mf√∂relse med G√∂teborgsregionens kommuner

**Styrkor:**
- ‚úÖ H√∂gre meritv√§rde i grundskolan √§n m√•nga j√§mf√∂rbara kommuner
- ‚úÖ God syssels√§ttningsgrad (ca 89%)
- ‚úÖ Stark befolkningstillv√§xt (+1-2% √•rligen)
- ‚úÖ Attraktivt boende med unik kombination stad-natur-kust
- ‚úÖ N√§rhet till G√∂teborg (30 min med t√•g)

**Utmaningar:**
- ‚ö†Ô∏è H√∂gre bostadspriser √§n m√•nga andra kommuner i regionen
- ‚ö†Ô∏è Begr√§nsad lokal arbetsmarknad (m√•nga pendlar)
- ‚ö†Ô∏è Behov av fortsatt utbyggnad av kollektivtrafik
- ‚ö†Ô∏è L√§gre andel hyresr√§tter √§n √∂nskv√§rt

### Liknande kommuner

**Kungsbacka liknar:**
- **Partille** - pendlarkommun till G√∂teborg, stark tillv√§xt
- **M√∂lndal** - n√§ra storstad, v√§xande befolkning
- **Varberg** - kustl√§ge, god livskvalitet

**Kungsbacka skiljer sig genom:**
- St√∂rre geografisk area
- Fler och mer spridda t√§torter (9 orter)
- Starkare kustprofil och naturv√§rden

### Regional position

**Bostadsmarknad:**
- H√∂gre priser √§n Varberg, Falkenberg
- L√§gre priser √§n G√∂teborgs innerstad
- Konkurrerar med M√∂lndal, Partille om inflyttare

**Service och n√§ringsliv:**
- Brett utbud inom handel (Kungsm√§ssan, centrum)
- V√§xande f√∂retagande
- God tillg√•ng till kultur och fritidsaktiviteter
{context_str}
{web_str}
{sources_footer}

### üìä Detaljerade j√§mf√∂relser
Bes√∂k **"Kolada"**-sidan f√∂r att j√§mf√∂ra specifika nyckeltal med andra kommuner i G√∂teborgsregionen och riket.
"""
    
    # === √ñVERSIKTSPLAN/PLANERING ===
    elif any(word in question_lower for word in ['√∂versiktsplan', 'planering', 'markanv√§ndning', 'bebyggelse', 'plan']):
        response = f"""
## üó∫Ô∏è √ñversiktsplanering i Kungsbacka

√ñversiktsplanen √§r kommunens viktigaste strategiska dokument f√∂r l√•ngsiktig planering.

### Huvudprinciper

**Ortstruktur:**
- **Prioriterade orter:** Kungsbacka stad, √Ösa, Fj√§r√•s
  - H√§r fokuseras ny bebyggelse
  - Utbyggnad av service och infrastruktur
  - Kollektivtrafikn√§ra l√§gen

- **√ñvriga orter:** Onsala, Kullavik, S√§r√∂, Vallda, Frilles√•s, Anneberg
  - Kompletterande bebyggelse
  - Bibeh√•lla orternas karakt√§r

**Markanv√§ndning:**
- F√∂rt√§tning i t√§torter ("inifr√•n och ut")
- Bevarande av gr√∂nomr√•den och naturv√§rden
- Balans mellan bebyggelse och landsbygd

### √ñP-f√∂ljsamhet

**Nul√§ge:**
- 74% av planbesked f√∂ljer √∂versiktsplanen
- M√•ls√§ttning: Minst 80%

**Vanliga avvikelser:**
- Planbesked utanf√∂r prioriterade orter
- St√∂rre omfattning √§n √ñP anger
- Konflikt med naturv√§rden

### Strategiska utvecklingsomr√•den

**Bost√§der:**
- T√∂l√∂ √§ngar (Kungsbacka stad)
- Voxl√∂v (Kungsbacka stad)
- Boviera (√Ösa)
- √Öskatorp (√Ösa)

**N√§ringsliv:**
- Kungsm√§ssan (handel, kontor)
- Hede station (logistik, verksamheter)
- √Ösa s√∂dra (verksamhetsomr√•de)
{context_str}
{web_str}
{sources_footer}

### üß≠ L√§s mer
Bes√∂k **"√ñversiktsplanering"**-sidan f√∂r detaljer om planbesked, genomf√∂rande och tematisk √∂verblick.
"""
    
    # === H√ÖLLBARHET ===
    elif any(word in question_lower for word in ['h√•llbarhet', 'milj√∂', 'klimat', 'strategi', 'utsl√§pp']):
        response = f"""
## üå± H√•llbarhetsarbete i Kungsbacka

Kungsbacka arbetar systematiskt med h√•llbarhet enligt tre perspektiv:

### Ekologisk h√•llbarhet

**Klimatm√•l:**
- Klimatneutral kommun 2040
- Minska v√§xthusgasutsl√§pp med 70% till 2030 (j√§mf√∂rt med 1990)

**Nul√§ge:**
- Utsl√§pp: ~87 ton CO‚ÇÇ-ekv/inv√•nare (2024)
- √Ötervinning: 52% av hush√•llsavfall
- F√∂rnybar energi: 68%

**√Ötg√§rder:**
- Utbyggnad av f√∂rnybar energi (sol, vind)
- Energieffektivisering av byggnader
- H√•llbart resande (cykel, kollektivtrafik)
- Cirkul√§r ekonomi och avfallsminimering

### Social h√•llbarhet

**Fokusomr√•den:**
- J√§mst√§lldhet och m√§nskliga r√§ttigheter
- Inkludering och integration
- God livsmilj√∂ f√∂r alla √•ldrar
- Tillg√§nglig service och omsorg

**Exempel:**
- Trygga boendemilj√∂er
- M√∂tesplatser och fritidsaktiviteter
- God skola och utbildning
- Kultur f√∂r alla

### Ekonomisk h√•llbarhet

**L√•ngsiktig ekonomi:**
- Balanserad budget
- Investeringar i infrastruktur
- Attraktivt n√§ringslivsklimat
- H√•llbar kompetensf√∂rs√∂rjning

**Cirkul√§r ekonomi:**
- √Öterbruk och material√•tervinning
- Giftfria kretslopp
- Resurseffektivitet
{context_str}
{web_str}
{sources_footer}

### üìñ L√§s mer
Kommunens h√•llbarhetsstrategi finns p√• kungsbacka.se under "V√•ra steg mot h√•llbarhet".
"""
    
    # === GENERELLT SVAR (mer detaljerat √§n innan) ===
    else:
        response = f"""
Tack f√∂r din fr√•ga om Kungsbacka!

Jag har s√∂kt igenom tillg√§ngliga data och dokument f√∂r att ge dig ett relevant svar.
{context_str}
{web_str}

### üí° F√∂rslag p√• hur du kan f√• mer information:

**üìä F√∂r statistik och nyckeltal:**
- **Kommunens nyckeltal** - √ñvergripande m√•luppfyllelse
- **Kolada** - Detaljerad statistik och j√§mf√∂relser
- **Befolkning** - Demografisk analys och prognoser

**üó∫Ô∏è F√∂r planering och utveckling:**
- **√ñversiktsplanering** - Planbesked, prognoser och uppf√∂ljning
- **Karttj√§nst** - Geografisk √∂versikt av orter
- **Ortanalys** - Detaljerad information per ort

**ü§ñ F√∂r dialogst√∂d:**
St√§ll g√§rna en mer specifik fr√•ga! Exempel:
- "Hur utvecklas befolkningen i Kungsbacka?"
- "Vilka √§r de st√∂rsta utmaningarna f√∂r kommunen?"
- "Vad s√§ger √∂versiktsplanen om utveckling?"
- "Hur arbetar kommunen med h√•llbarhet?"
{sources_footer}
"""
    
    return response

# Chat-input
if prompt := st.chat_input("St√§ll en fr√•ga om Kungsbacka..."):
    # L√§gg till anv√§ndarens meddelande
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)
    
    # H√§mta relevant data
    with st.spinner("S√∂ker igenom data och dokument..."):
        data_context, web_insights = get_relevant_data(prompt)
        response = generate_response(prompt, data_context, web_insights)
    
    # L√§gg till assistentens svar
    st.session_state.messages.append({"role": "assistant", "content": response})
    with st.chat_message("assistant"):
        st.markdown(response)

# Rensa chat-knapp
if st.session_state.messages:
    if st.button("üóëÔ∏è Rensa konversation"):
        st.session_state.messages = []
        st.rerun()

# Snabbfr√•gor
st.markdown("---")
st.markdown("### üí° F√∂reslagna fr√•gor")

col1, col2, col3, col4 = st.columns(4)

with col1:
    if st.button("üìà Hur utvecklas befolkningen?"):
        st.session_state.messages.append({"role": "user", "content": "Hur utvecklas befolkningen i Kungsbacka?"})
        st.rerun()

with col2:
    if st.button("‚ö†Ô∏è Vilka √§r de st√∂rsta utmaningarna?"):
        st.session_state.messages.append({"role": "user", "content": "Vilka √§r de st√∂rsta utmaningarna f√∂r Kungsbacka kommun?"})
        st.rerun()

with col3:
    if st.button("üó∫Ô∏è Vad s√§ger √∂versiktsplanen?"):
        st.session_state.messages.append({"role": "user", "content": "Vad s√§ger √∂versiktsplanen om utveckling i Kungsbacka?"})
        st.rerun()

with col4:
    if st.button("üå± H√•llbarhetsarbete?"):
        st.session_state.messages.append({"role": "user", "content": "Vad s√§ger h√•llbarhetsstrategin om klimatarbetet?"})
        st.rerun()
